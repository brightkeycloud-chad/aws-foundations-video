#!/bin/bash

# AWS CodePipeline Demo Cleanup Script
# This script removes all files and resources created during the demonstration

set -e

echo "üßπ Starting AWS CodePipeline Demo Cleanup"
echo "========================================="

# Function to check if user wants to proceed
confirm_cleanup() {
    echo ""
    echo "‚ö†Ô∏è  This will:"
    echo "   ‚Ä¢ Destroy the AWS CloudFormation stack (CodepipelineDemoStack)"
    echo "   ‚Ä¢ Remove the Python virtual environment (.venv/)"
    echo "   ‚Ä¢ Remove CDK output files (cdk.out/)"
    echo "   ‚Ä¢ Remove the generated source.zip file"
    echo ""
    read -p "Are you sure you want to proceed? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "‚ùå Cleanup cancelled"
        exit 1
    fi
}

# Check if AWS CLI is available
if ! command -v aws &> /dev/null; then
    echo "‚ùå AWS CLI is not installed. Cannot destroy AWS resources."
    echo "‚ÑπÔ∏è  Will only clean up local files."
    LOCAL_ONLY=true
else
    LOCAL_ONLY=false
fi

# Check if CDK is available
if ! command -v cdk &> /dev/null; then
    echo "‚ùå AWS CDK is not installed. Cannot destroy CDK stack."
    echo "‚ÑπÔ∏è  Will only clean up local files."
    LOCAL_ONLY=true
fi

# Show what will be cleaned up
confirm_cleanup

echo "üöÄ Starting cleanup process..."

# 1. Destroy AWS resources (if CDK and AWS CLI are available)
if [ "$LOCAL_ONLY" = false ]; then
    echo "‚òÅÔ∏è  Destroying AWS CloudFormation stack..."
    
    # Check if the stack exists
    if aws cloudformation describe-stacks --stack-name CodepipelineDemoStack &> /dev/null; then
        echo "üì§ Found CodepipelineDemoStack, destroying..."
        cdk destroy --force
        echo "‚úÖ AWS resources destroyed"
    else
        echo "‚ÑπÔ∏è  No CodepipelineDemoStack found, skipping AWS cleanup"
    fi
else
    echo "‚ö†Ô∏è  Skipping AWS resource cleanup (CDK/AWS CLI not available)"
    echo "‚ÑπÔ∏è  Please manually delete the CodepipelineDemoStack from AWS Console if it exists"
fi

# 2. Remove Python virtual environment
if [ -d ".venv" ]; then
    echo "üêç Removing Python virtual environment..."
    rm -rf .venv
    echo "‚úÖ Virtual environment removed"
else
    echo "‚ÑπÔ∏è  No virtual environment found"
fi

# 3. Remove CDK output directory
if [ -d "cdk.out" ]; then
    echo "üìÅ Removing CDK output directory..."
    rm -rf cdk.out
    echo "‚úÖ CDK output directory removed"
else
    echo "‚ÑπÔ∏è  No CDK output directory found"
fi

# 4. Remove generated source.zip file
if [ -f "source.zip" ]; then
    echo "üì¶ Removing generated source.zip..."
    rm -f source.zip
    echo "‚úÖ source.zip removed"
else
    echo "‚ÑπÔ∏è  No source.zip file found"
fi

# 5. Remove any Python cache files
echo "üóëÔ∏è  Removing Python cache files..."
find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
find . -name "*.pyc" -delete 2>/dev/null || true
echo "‚úÖ Python cache files removed"

# 6. Remove any CDK context files (optional - these can be kept for future use)
read -p "ü§î Remove CDK context file (cdk.context.json)? This will require re-lookup of AMIs, etc. (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    if [ -f "cdk.context.json" ]; then
        rm -f cdk.context.json
        echo "‚úÖ CDK context file removed"
    else
        echo "‚ÑπÔ∏è  No CDK context file found"
    fi
else
    echo "‚ÑπÔ∏è  Keeping CDK context file"
fi

echo ""
echo "üéâ Cleanup completed successfully!"
echo "=================================="
echo ""
echo "üìã Summary of cleaned up items:"
echo "   ‚Ä¢ AWS CloudFormation stack (if existed)"
echo "   ‚Ä¢ Python virtual environment (.venv/)"
echo "   ‚Ä¢ CDK output files (cdk.out/)"
echo "   ‚Ä¢ Generated source.zip file"
echo "   ‚Ä¢ Python cache files (__pycache__, *.pyc)"
echo ""
echo "üìÅ Remaining files (preserved):"
echo "   ‚Ä¢ README.md - Documentation"
echo "   ‚Ä¢ DEMO_GUIDE.md - Demo instructions"
echo "   ‚Ä¢ app.py - CDK application entry point"
echo "   ‚Ä¢ cdk.json - CDK configuration"
echo "   ‚Ä¢ requirements.txt - Python dependencies"
echo "   ‚Ä¢ deploy.sh - Deployment script"
echo "   ‚Ä¢ cleanup.sh - This cleanup script"
echo "   ‚Ä¢ codepipeline_demo/ - CDK stack code"
echo "   ‚Ä¢ sample-source/ - Sample application source"
echo ""
echo "‚ÑπÔ∏è  The demonstration can be run again by executing ./deploy.sh"
